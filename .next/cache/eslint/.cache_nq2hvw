[{"/home/hihugo1/Documentos/alura/pages/_app.jsx":"1","/home/hihugo1/Documentos/alura/pages/chat.jsx":"2","/home/hihugo1/Documentos/alura/pages/index.jsx":"3","/home/hihugo1/Documentos/alura/src/components/ButtonSendSticker.js":"4"},{"size":812,"mtime":1643511335790,"results":"5","hashOfConfig":"6"},{"size":8583,"mtime":1643587568782,"results":"7","hashOfConfig":"6"},{"size":8573,"mtime":1643580632412,"results":"8","hashOfConfig":"6"},{"size":3155,"mtime":1643584460063,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ht4uo3",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/home/hihugo1/Documentos/alura/pages/_app.jsx",[],"/home/hihugo1/Documentos/alura/pages/chat.jsx",["21","22"],"import { Box, Text, TextField, Image, Button } from \"@skynexui/components\";\nimport { Backdrop, CircularProgress } from '@mui/material';\nimport React from \"react\";\nimport appConfig from \"../config.json\";\nimport { useRouter } from \"next/router\"\nimport {ButtonSendSticker} from \"../src/components/ButtonSendSticker\"\nimport { createClient } from '@supabase/supabase-js'\n\nconst SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTY0MzU2NDMzNSwiZXhwIjoxOTU5MTQwMzM1fQ.IkzH1xC7smVNoD-HeuCl8H4H2yvGl9kBkNxP6n8eZYU'\nconst SUPABASE_URL = 'https://vdxbonxyqcnlsnexuonn.supabase.co'\n\nconst supabaseClient = createClient(SUPABASE_URL, SUPABASE_ANON_KEY)\n\nfunction EscutaMensagemEmTempoReal(){\n  return supabaseClient\n    .from('mensagens')\n    .on('INSERT', (oqueVeio) =>{\n      console.log(\"O que veio\",oqueVeio)\n    })\n    .subscribe();\n}\n\nexport default function ChatPage() {\n  // Sua lógica vai aqui\n  const [mensagem, setMensagem] = React.useState(\"\");\n  const roteamento = useRouter()\n  const usuarioLogado = roteamento.query.username\n  const [listaDeMensagens, setListaDeMensagens] = React.useState([]);\n  const [backdrop, setBackdrop] = React.useState(true);\n  // ./Sua lógica vai aqui\n\n    React.useEffect(() =>{\n      supabaseClient\n      .from('mensagens')\n      .select('*')\n      .order('id', { ascending: false})\n      .then(({ data }) =>{\n        console.log('Dados da consulta')\n        setListaDeMensagens(data)\n        setBackdrop(false);\n\n      })\n\n      EscutaMensagemEmTempoReal()\n    }, [])\n\n\n  function handleNovaMensagem(novaMensagem) {\n\n    if (novaMensagem.length == 0)\n    return;\n\n\n    const mensagem = {\n      //id: listaDeMensagens.length + 1,\n      de: usuarioLogado,\n      texto: novaMensagem,\n    };\n\n    supabaseClient\n    .from('mensagens')\n    .insert([\n      mensagem\n    ])\n    .then( ({data}) =>{\n      setListaDeMensagens([data[0], ...listaDeMensagens]);\n      setMensagem(\"\");\n    })\n\n  }\n\n\n  return (\n    <Box\n      styleSheet={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        backgroundBlendMode: \"multiply\",\n        color: appConfig.theme.colors.neutrals[\"000\"],\n      }}\n    >\n      <Box\n        styleSheet={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          flex: 1,\n          boxShadow: \"0 2px 10px 0 rgb(0 0 0 / 20%)\",\n          backgroundColor: appConfig.theme.colors.neutrals[700],\n          height: \"100%\",\n          maxWidth: \"100%\",\n          maxHeight: \"100vh\",\n          padding: \"20px\",\n        }}\n      >\n        <Header />\n        <Box\n          styleSheet={{\n            position: \"relative\",\n            display: \"flex\",\n            flex: 1,\n            height: \"80%\",\n            backgroundColor: appConfig.theme.colors.neutrals[600],\n            flexDirection: \"column\",\n\n            borderRadius: \"5px\",\n            padding: \"16px\",\n          }}\n        >\n          <MessageList mensagens={listaDeMensagens} setMensagens={setListaDeMensagens} setBackdrop={setBackdrop}/>\n          {/*{listaDeMensagens.map((mensagemAtual) =>{\n                        return (\n                        <li key={mensagemAtual.id}>\n                            {mensagemAtual.de}:{mensagemAtual.texto}\n                        </li>\n                        )\n                    })}*/}\n\n          <Box\n            as=\"form\"\n            styleSheet={{\n              display: \"flex\",\n              alignItems: \"center\",\n              \n            }}\n          >\n            <TextField\n              value={mensagem}\n              onChange={(event) => {\n                const value = event.target.value;\n                setMensagem(value);\n              }}\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  event.preventDefault();\n                  handleNovaMensagem(mensagem);\n                }\n              }}\n              placeholder=\"Insira sua mensagem aqui...\"\n              type=\"textarea\"\n              styleSheet={{\n                width: \"100%\",\n                border: \"0\",\n                resize: \"none\",\n                borderRadius: \"5px\",\n                padding: \"6px 8px\",\n                backgroundColor: appConfig.theme.colors.neutrals[800],\n                marginRight: \"12px\",\n                color: appConfig.theme.colors.neutrals[200],\n              }}\n            />\n\n          <ButtonSendSticker onStickerClick={(sticker) => {\n              console.log('[Usando o component]', sticker)\n              handleNovaMensagem(':sticker:' + sticker)\n          }}/>\n            <Backdrop\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n                open={backdrop}\n              >\n                <CircularProgress color='inherit' />\n              </Backdrop>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nfunction Header() {\n  return (\n    <>\n      <Box\n        styleSheet={{\n          width: \"100%\",\n          marginBottom: \"16px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text variant=\"heading5\">Chat</Text>\n        <Button\n          variant=\"tertiary\"\n          colorVariant=\"neutral\"\n          href=\"/\"\n          iconName= \"FaArrowRight\"\n        />\n      </Box>\n    </>\n  );\n}\n\nfunction MessageList(props) {\n  console.log(props);\n  var {mensagens, setMensagens, setBackdrop} = props;\n\n  function handleApagaMensagem(id) {\n\n    setBackdrop(true);\n\n    supabaseClient\n      .from('mensagens')\n      .delete()\n      .match({ id: id })\n      .then(() => {\n        var newMsgs = mensagens.filter((msg) => msg.id != id);\n        setMensagens(newMsgs);\n\n        setBackdrop(false);\n      });\n  }\n\n  return (\n    <Box\n      tag=\"ul\"\n      styleSheet={{\n        overflowY: \"scroll\",\n        scrollBehavior: 'smooth',\n        display: \"flex\",\n        flexDirection: \"column-reverse\",\n        flex: 1,\n        color: appConfig.theme.colors.neutrals[\"000\"],\n        marginBottom: \"16px\",\n    }\n    }\n    >\n      {props.mensagens.map((mensagem) => {\n        return (\n          <Text\n            key={mensagem.id}\n            tag=\"li\"\n            styleSheet={{\n              borderRadius: \"5px\",\n              padding: \"6px\",\n              marginBottom: \"12px\",\n              hover: {\n                backgroundColor: appConfig.theme.colors.neutrals[700],\n              },\n            }}\n          >\n            <Box\n              styleSheet={{\n                position: 'relative',\n                marginBottom: \"8px\",\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center'\n              }}\n            >\n              <a href={`https://github.com/${mensagem.de}`}>\n              <Image\n                styleSheet={{\n                  width: \"20px\",\n                  height: \"20px\",\n                  borderRadius: \"50%\",\n                  display: \"inline-block\",\n                  marginRight: \"8px\",\n                  'hover':{\n                    transform: 'scale(1.1)'\n                  }\n                }}\n                src={`https://github.com/${mensagem.de}.png`}/>\n              </a>\n              <Text tag=\"strong\">{mensagem.de}</Text>\n              <Text\n                styleSheet={{\n                  fontSize: \"10px\",\n                  marginLeft: \"8px\",\n                  color: appConfig.theme.colors.neutrals[300],\n                }}\n                tag=\"span\"\n              >\n                {new Date().toLocaleDateString()}\n              </Text>\n              <Button\n              label='&#x2718;'\n              onClick={() => handleApagaMensagem(mensagem.id)}\n              styleSheet={{\n                position: 'absolute',\n                right: '0',\n                marginRight: '10px',\n                width: '10px',\n                height: '10px'\n              }} />\n            </Box>\n\n              {mensagem.texto.startsWith(':sticker:') \n                  ?(\n                    <Image src={mensagem.texto.replace(':sticker:', '')} \n                    styleSheet={\n                      {\n                        width: {\n                          xs: '200px',\n                          sm: '290px',\n                        }                        \n                      }\n                    }\n                    / >\n                    )\n                  :(\n                    mensagem.texto\n                  )}\n          </Text>\n\n        );\n      })}\n    </Box>\n  );\n}\n","/home/hihugo1/Documentos/alura/pages/index.jsx",["23"],"import { Box, Button, Text, TextField, Image } from '@skynexui/components';\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport appConfig from '../config.json';\n\n\nfunction Titulo(props) {\n  const Tag = props.tag || 'h1';\n  return (\n    <>\n      <Tag>{props.children}</Tag>\n      <style jsx>{`\n            ${Tag} {\n                color: ${appConfig.theme.colors.neutrals['000']};\n                font-size: 24px;\n                font-weight: 600;\n            }\n            `}</style>\n    </>\n  );\n}\n\nexport default function PaginaInicial() {\n  // const username = 'hihugo1'; \n  const [username, setUsername] = React.useState('hihugo1');\n  const roteamento = useRouter()\n\n  const [followers, setFollowers] = React.useState('0')\n  const [following, setfollowing] = React.useState('0')\n  const [twitter, setTwitter] = React.useState('0')\n  const [bio, setBio] = React.useState('0')\n\n  fetch(`https://api.github.com/users/${username}`)\n    .then(res => res.json())\n    .then(data => {\n      setFollowers(data.followers)\n      setfollowing(data.following)\n      setTwitter(data.twitter_username)\n      setBio(data.bio)\n    })\n\n\n  return (\n    <>\n      <Box\n        styleSheet={{\n          display: 'flex', alignItems: 'center', justifyContent: 'center',\n          backgroundImage: 'url(https://images3.alphacoders.com/118/thumb-1920-1185045.jpg)',\n          backgroundRepeat: 'no-repeat', backgroundSize: 'cover',\n        }}\n      >\n        <Box\n          styleSheet={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            flexDirection: {\n              xs: 'column',\n              sm: 'row',\n            },\n            width: '100%', maxWidth: '700px',\n            borderRadius: '5px', padding: '32px', margin: '16px',\n            boxShadow: '0 2px 10px 0 rgb(0 0 0 / 20%)',\n            backgroundColor: appConfig.theme.colors.neutrals[700],\n          }}\n        >\n          {/* Formulário */}\n          <Box\n            as=\"form\"\n            onSubmit={function (infosDoEvento) {\n              infosDoEvento.preventDefault();\n              console.log('Alguém submeteu o form');\n              roteamento.push(`/chat?username=${username}`);\n              // window.location.href = '/chat';\n            }}\n            styleSheet={{\n              display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center',\n              width: { xs: '100%', sm: '50%' }, textAlign: 'center', marginBottom: '32px',\n            }}\n          >\n            <Titulo tag=\"h2\">Boas vindas Invocador!</Titulo>\n            <Text variant=\"body3\" styleSheet={{ marginBottom: '32px', color: appConfig.theme.colors.neutrals[300] }}>\n              {appConfig.name}\n            </Text>\n\n            {/* <input\n                            type=\"text\"\n                            value={username}\n                            onChange={function (event) {\n                                console.log('usuario digitou', event.target.value);\n                                // Onde ta o valor?\n                                const valor = event.target.value;\n                                // Trocar o valor da variavel\n                                // através do React e avise quem precisa\n                                setUsername(valor);\n                            }}\n                          /> */}\n            <TextField\n              value={username}\n              onChange={function (event) {\n                console.log('usuario digitou', event.target.value);\n                // Onde ta o valor?\n                const valor = event.target.value;\n                // Trocar o valor da variavel\n                // através do React e avise quem precisa\n                setUsername(valor);\n              }}\n              fullWidth\n              textFieldColors={{\n                neutral: {\n                  textColor: appConfig.theme.colors.neutrals[200],\n                  mainColor: appConfig.theme.colors.neutrals[900],\n                  mainColorHighlight: appConfig.theme.colors.secundary[500],\n                  backgroundColor: appConfig.theme.colors.neutrals[800],\n                },\n              }}\n            />\n            <Button\n              type='submit'\n              label='Entrar'\n\n              fullWidth\n              buttonColors={{\n                contrastColor: appConfig.theme.colors.neutrals[\"000\"],\n                mainColor: appConfig.theme.colors.secundary[500],\n                mainColorLight: appConfig.theme.colors.secundary[400],\n                mainColorStrong: appConfig.theme.colors.secundary[600],\n              }}\n            />\n          </Box>\n          {/* Formulário */}\n\n\n          {/* Photo Area */}\n          <Box\n            styleSheet={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              maxWidth: '200px',\n              padding: '16px',\n              backgroundColor: appConfig.theme.colors.neutrals[800],\n              border: '1px solid',\n              borderColor: appConfig.theme.colors.neutrals[999],\n              borderRadius: '10px',\n              flex: 1,\n              minHeight: '240px',\n            }}\n          >\n            <a href={`https://github.com/${username}`}>\n            <Image\n              styleSheet={{\n                borderRadius: '50%',\n                marginBottom: '16px',\n                border: '4px solid #0081CC',\n\n              }}\n              src={`https://github.com/${username}.png`} \n            />\n            </a>\n\n            <Text\n              variant=\"body4\"\n              styleSheet={{\n                color: appConfig.theme.colors.neutrals[200],\n                backgroundColor: appConfig.theme.colors.neutrals[900],\n                padding: '3px 10px',\n                borderRadius: '1000px'\n              }}\n            >\n              {username}\n            </Text>\n            <Text\n              variant=\"body4\"\n              styleSheet={{\n                color: appConfig.theme.colors.neutrals[200],\n                marginTop: '5px',\n                backgroundColor: appConfig.theme.colors.neutrals[900],\n                padding: '3px 10px',\n              }}\n            >\n              {bio}\n            </Text>\n            <Box\n              styleSheet={{\n                display: 'flex',\n                gap: '10px',\n                margin: '10px',\n                justifyContent: 'center',\n                flexFlow: 'wrap',\n                width: '100%'\n              }}\n            >\n            <Text \n              variant='body4'\n              styleSheet={{\n              color: appConfig.theme.colors.neutrals[200],\n              backgroundColor: appConfig.theme.colors.neutrals[900]\n              \n              }}> seguidores: {followers}\n              </Text>\n              <Text \n              variant='body4'\n              styleSheet={{\n              color: appConfig.theme.colors.neutrals[200],\n              backgroundColor: appConfig.theme.colors.neutrals[900]\n              \n              }}> seguindo: {following}\n              </Text>\n              <Box\n              styleSheet={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                gap: '10px',\n                backgroundColor: appConfig.theme.colors.neutrals[900],\n                padding: '10px',\n                width: '100%'\n              }}\n            >\n              <svg style={{ width: '15px', color: appConfig.theme.colors.neutrals[200]}} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 273.5 222.3\" role=\"img\" aria-labelledby=\"jpusf26l417wecl97qs82rhbank6dut\"><path d=\"M273.5 26.3a109.77 109.77 0 0 1-32.2 8.8 56.07 56.07 0 0 0 24.7-31 113.39 113.39 0 0 1-35.7 13.6 56.1 56.1 0 0 0-97 38.4 54 54 0 0 0 1.5 12.8A159.68 159.68 0 0 1 19.1 10.3a56.12 56.12 0 0 0 17.4 74.9 56.06 56.06 0 0 1-25.4-7v.7a56.11 56.11 0 0 0 45 55 55.65 55.65 0 0 1-14.8 2 62.39 62.39 0 0 1-10.6-1 56.24 56.24 0 0 0 52.4 39 112.87 112.87 0 0 1-69.7 24 119 119 0 0 1-13.4-.8 158.83 158.83 0 0 0 86 25.2c103.2 0 159.6-85.5 159.6-159.6 0-2.4-.1-4.9-.2-7.3a114.25 114.25 0 0 0 28.1-29.1\" fill=\"currentColor\"></path></svg>\n                <Text \n                  variant='body4'\n                  styleSheet={{\n                  color: appConfig.theme.colors.neutrals[200],\n                }}>\n                  {twitter}\n                </Text>\n              </Box>\n            </Box>\n          </Box>\n          {/* Photo Area */}\n        </Box>\n      </Box>\n    </>\n  );\n}\n\n","/home/hihugo1/Documentos/alura/src/components/ButtonSendSticker.js",["24","25"],"import React from 'react';\nimport { Box, Button, Text, Image } from '@skynexui/components';\nimport appConfig from '../../config.json';\n\nexport function ButtonSendSticker(props) {\n  const [isOpen, setOpenState] = React.useState('');\n\n  return (\n    <Box\n      styleSheet={{\n        position: 'relative',\n      }}\n    >\n      <Button\n        styleSheet={{\n          borderRadius: '50%',\n          padding: '0 3px 0 0',\n          minWidth: '50px',\n          minHeight: '50px',\n          fontSize: '20px',\n          marginBottom: '8px',\n          lineHeight: '0',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: appConfig.theme.colors.neutrals[300],\n          filter: isOpen ? 'grayscale(0)' : 'grayscale(1)',\n          hover: {\n            filter: 'grayscale(0)',\n          }\n        }}\n        label=\"😋\"\n        onClick={() => setOpenState(!isOpen)}\n      />\n      {isOpen && (\n        <Box\n          styleSheet={{\n            display: 'flex',\n            flexDirection: 'column',\n            borderRadius: '5px',\n            position: 'absolute',\n            backgroundColor: appConfig.theme.colors.neutrals[800],\n            width: {\n              xs: '200px',\n              sm: '290px',\n            },\n            height: '300px',\n            right: '30px',\n            bottom: '30px',\n            padding: '16px',\n            boxShadow: 'rgba(4, 4, 5, 0.15) 0px 0px 0px 1px, rgba(0, 0, 0, 0.24) 0px 8px 16px 0px',\n          }}\n          onClick={() => setOpenState(false)}\n        >\n          <Text\n            styleSheet={{\n              color: appConfig.theme.colors.neutrals[\"000\"],\n              fontWeight: 'bold',\n            }}\n          >\n            Stickers\n          </Text>\n          <Box\n            tag=\"ul\"\n            styleSheet={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              justifyContent: 'space-between',\n              flex: 1,\n              paddingTop: '16px',\n              overflow: 'scroll',\n            }}\n          >\n            {appConfig.stickers.map((sticker) => (\n              <Text\n                onClick={() => {\n                  // console.log('[DENTRO DO COMPONENTE] Clicou no sticker:', sticker);\n                  if (Boolean(props.onStickerClick)) {\n                    props.onStickerClick(sticker);\n                  }\n                }}\n                onClick={() => {\n                  if(Boolean(props.onStickerClick)){\n                  props.onStickerClick(sticker)\n                  }\n                }}\n                tag=\"li\" key={sticker}\n                styleSheet={{\n                  width: '50%',\n                  borderRadius: '5px',\n                  padding: '10px',\n                  focus: {\n                    backgroundColor: appConfig.theme.colors.neutrals[600],\n                  },\n                  hover: {\n                    backgroundColor: appConfig.theme.colors.neutrals[600],\n                  }\n                }}\n              >\n                <Image src={sticker} />\n              </Text>\n            ))}\n          </Box>\n        </Box>\n      )}\n    </Box>\n  )\n}",{"ruleId":"26","severity":1,"message":"27","line":254,"column":15,"nodeType":"28","endLine":265,"endColumn":64},{"ruleId":"26","severity":1,"message":"27","line":292,"column":21,"nodeType":"28","endLine":301,"endColumn":24},{"ruleId":"26","severity":1,"message":"27","line":151,"column":13,"nodeType":"28","endLine":159,"endColumn":15},{"ruleId":"29","severity":2,"message":"30","line":82,"column":17,"nodeType":"31","messageId":"32","endLine":86,"endColumn":19},{"ruleId":"26","severity":1,"message":"27","line":100,"column":17,"nodeType":"28","endLine":100,"endColumn":40},"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps"]